@csrf_exempt
def salvar_pdf(request):
    if request.method == 'POST':
        try:
            dados_pdf = json.loads(request.body.decode('utf-8'))
            nome_cliente = dados_pdf.get('nome_cliente')
            numero_proposta = dados_pdf.get('numero_proposta')

            # Ler planilha de índices
            planilha_indices = pd.read_excel(r'\\10.1.1.2\ti\BaseCalculos\PrecificacaoEquipe.xlsx', sheet_name='Índice Informatec')

            resultados = request.session.get('resultados', [])
            if not resultados:
                return JsonResponse({'status': 'error', 'message': 'Nenhum resultado encontrado.'}, status=400)
            
            input_iniciais = request.session.get('input_iniciais', [])
            if not input_iniciais:
                return JsonResponse({'status': 'error', 'message': 'Nenhum input iniciais encontrado.'}, status=400)

            lucro_desejado = input_iniciais.get('lucro_desejado', 'N/A')
            qtd_funcionarios = input_iniciais.get('qtd_funcionarios', 'N/A')

            # Encontrar o índice Informatec correto
            for i in range(5, 10):  
                indice_informatec_celula = planilha_indices.iloc[i-1, 0]
                if pd.isna(indice_informatec_celula):
                    continue
                indice_informatec_celula = float(indice_informatec_celula) 
                if indice_informatec_celula == lucro_desejado:
                    indice_informatec = float(planilha_indices.iloc[i-1, 1])
                    break
            else:
                indice_informatec = 0 # 1.9935 média

            # Formatar lucro desejado
            if isinstance(lucro_desejado, (int, float)):
                lucro_desejado_formatado = f"{lucro_desejado:.2f}".rstrip('0').rstrip('.')
            else:
                lucro_desejado_formatado = lucro_desejado

            # Criar PDF
            pdf = FPDF()
            pdf.add_page()
            pdf.set_font("Arial", size=12)

            # Adicionar conteúdo ao PDF
            pdf.cell(200, 10, f'Proposta: {numero_proposta} | Cliente: {nome_cliente}', ln=True)
            pdf.cell(200, 10, f'Lucro Desejado: {lucro_desejado_formatado}%', ln=True)

            indice_informatec_formatado = f'{indice_informatec:.4f}'.replace('.', ',')
            pdf.cell(200, 10, f'Índice Informatec: {indice_informatec_formatado}', ln=True)

            # Exibir custo de mão de obra direta da equipe
            custo_mo_equipe = 0  
            for cargo in resultados:
                total_str = cargo.get('total', '0,00').replace('R$ ', '').strip()
                total = float(total_str.replace('.', '').replace(',', '.'))

                porcento_input_sem_ajuste = cargo.get('valor', 'N/A')
                
                if isinstance(porcento_input_sem_ajuste, (float, int)):
                    porcento_input = str(int(porcento_input_sem_ajuste))
                    custo_mo = total * (porcento_input_sem_ajuste / 100)
                else:
                    porcento_input = str(porcento_input_sem_ajuste).rstrip('.0')
                    custo_mo = 0

                custo_mo_equipe += custo_mo

            pdf.cell(200, 10, f'Custo M.O Direta - Equipe: {formatar_monetario(custo_mo_equipe)}', ln=True)

            indice_despesa = float(planilha_indices.iloc[9, 1])
            indice_despesa_formatado = f'{indice_despesa:.4f}'.replace('.', ',')
            pdf.cell(200, 10, f'Índice Despesa: {indice_despesa_formatado}', ln=True)

            despesas = indice_despesa * custo_mo_equipe
            pdf.cell(200, 10, f'Despesas: {formatar_monetario(despesas)}', ln=True)

            faturamento_liquido = indice_informatec * custo_mo_equipe
            pdf.cell(200, 10, f'Faturamento Líquido: {formatar_monetario(faturamento_liquido)}', ln=True)

            lucro = faturamento_liquido - despesas - custo_mo_equipe
            pdf.cell(200, 10, f'Lucro: {formatar_monetario(lucro)}', ln=True)

            imposto = float(planilha_indices.iloc[10, 1]) / 100

            # Formatar o valor para exibição no PDF
            imposto_formatado = f'{imposto * 100:.2f}'.replace('.', ',')
            pdf.cell(200, 10, f'Imposto: {imposto_formatado}%', ln=True)

            valor_proposta = faturamento_liquido / (1 - imposto)
            pdf.cell(200, 10, f'Valor da Proposta: {formatar_monetario(valor_proposta)}', ln=True)

            valor_proposta_base_por_func = valor_proposta / qtd_funcionarios
            pdf.cell(200, 10, f'Valor da Proposta Base por Func.: {formatar_monetario(valor_proposta_base_por_func)}', ln=True)

            valor_proposta_10porcento = valor_proposta * 1.1
            pdf.cell(200, 10, f'Valor Proposta + 10% Negociação: {formatar_monetario(valor_proposta_10porcento)}', ln=True)

            valor_proposta_10porcento_por_func = valor_proposta_base_por_func * 1.1
            pdf.cell(200, 10, f'Valor Proposta + 10% Negociação por Func.: {formatar_monetario(valor_proposta_10porcento_por_func)}', ln=True)

            # Adicionar outra linha em branco para separar
            pdf.cell(200, 10, '', ln=True)

            pdf.cell(200, 10, f'Número de Funcionários: {qtd_funcionarios}', ln=True)
            pdf.cell(200, 10, 'Equipe e Percentuais:', ln=True)
            for cargo in resultados:
                porcento_input_sem_ajuste = cargo.get('valor', 'N/A')
                porcento_input = str(int(porcento_input_sem_ajuste)) if isinstance(porcento_input_sem_ajuste, (float, int)) else str(porcento_input_sem_ajuste).rstrip('.0')

                pdf.cell(200, 10, f'Cargo: {formatar_cargo(cargo["cargo"])} - {porcento_input}%', ln=True)

            # Gerar PDF
            response = HttpResponse(pdf.output(dest='S').encode('latin1'), content_type='application/pdf')
            response['Content-Disposition'] = f'attachment; filename=Precificacao_Equipe_Proposta_{numero_proposta}_{nome_cliente}.pdf'
            return response

        except Exception as e:
            return JsonResponse({'status': 'error', 'message': str(e)}, status=500)